#include "../defines.h"

struct getputStruct input_parser_remote(int argc_s, char **argv_s) {

  int opt;
  int i;
  char* readwriteModeBinary = strncmp(argv_s[0], "get", 3) ? "rb" : "wb";
  char* readwriteModeText = strncmp(argv_s[0], "get", 3) ? "rt" : "wt";
  char* readwriteMode;
  struct getputStruct parsedArgs;
  static const char *optString = "bt";                                         /*rozpoznawalne krotkie opcje dla parsera*/
  static const struct option longOpts[] = {
    {"binary", no_argument, NULL, 'b'},                                 /*tablica opcji z pelnymi nazwami opcji*/
    {"text", no_argument, NULL, 't'}                                       /*oraz ich nazwami skrotowymi*/
    };


    printf("words: %d\n",argc_s);
  memset(&parsedArgs, 0, sizeof(struct sockaddr_in) );

  while((opt = getopt_long(argc_s, argv_s, optString, longOpts, NULL )) != -1)  {
    printf("%c\n",opt);
    switch(opt)  {
      case 'b':
        readwriteMode = readwriteModeBinary;
        break;

      case 't':
          readwriteMode = readwriteModeText;
        break;

      default:                                                                   /*opcja tylko dla celow zgodnosci ze standardem. Nie ma prawa wystÄ…pic*/
        break;
    }
  }
  printf("optind %d\n", optind);
  fflush(stdout);
for (i = optind -1; i < argc_s; ++i)  {
  printf ("Non-option argument %s\n", argv_s[i]);
  fflush(stdout);
}
  return parsedArgs;


}